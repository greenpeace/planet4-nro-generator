---
version: 2

defaults: &defaults
  docker:
    - image: gcr.io/planet-4-151612/p4-builder:{{ .Env.BUILDER_VERSION }}

job_environments:
  common_environment: &common_environment
    APP_HOSTPATH: {{ .Env.APP_HOSTPATH }}
    CONTAINER_PREFIX: {{ .Env.CONTAINER_PREFIX }}
    WP_DB_NAME_PREFIX: {{ .Env.MYSQL_USERNAME }}_{{ .Env.MYSQL_DATABASE }}
  develop_environment: &develop_environment
    APP_ENVIRONMENT: development
    APP_HOSTNAME: {{ .Env.DEVELOPMENT_HOSTNAME }}
    CLOUDSQL_INSTANCE: {{ .Env.GCP_DEVELOPMENT_CLOUDSQL }}
    GOOGLE_PROJECT_ID: {{ .Env.GCP_DEVELOPMENT_PROJECT }}
    GCLOUD_CLUSTER: p4-development
    HELM_NAMESPACE: develop
    HELM_RELEASE: {{ .Env.CONTAINER_PREFIX }}
    NEWRELIC_APPNAME: {{ .Env.NEWRELIC_APPNAME }} Development
    WP_DB_NAME: {{ .Env.MYSQL_USERNAME }}_{{ .Env.MYSQL_DATABASE }}_develop
    WP_STATELESS_BUCKET: {{ .Env.CONTAINER_PREFIX }}-stateless-develop
{{- if isTrue .Env.MAKE_RELEASE }}
  release_environment: &release_environment
    APP_ENVIRONMENT: staging
    APP_HOSTNAME: {{ .Env.RELEASE_HOSTNAME }}
    CLOUDSQL_INSTANCE: {{ .Env.GCP_PRODUCTION_CLOUDSQL }}
    GCLOUD_CLUSTER: {{ .Env.GCP_PRODUCTION_CLUSTER }}
    GOOGLE_PROJECT_ID: {{ .Env.GCP_PRODUCTION_PROJECT }}
    {{- if .Env.APP_HOSTPATH }}
    HELM_NAMESPACE: {{ .Env.APP_HOSTPATH }}
    {{- else }}
    HELM_NAMESPACE: {{ replace .Env.CONTAINER_PREFIX "planet4-" "" 1 }}
    {{- end }}
    HELM_RELEASE: {{ .Env.CONTAINER_PREFIX }}-release
    NEWRELIC_APPNAME: {{ .Env.NEWRELIC_APPNAME }} Release
    WP_DB_NAME: {{ .Env.MYSQL_USERNAME }}_{{ .Env.MYSQL_DATABASE }}_release
    WP_STATELESS_BUCKET: {{ .Env.CONTAINER_PREFIX }}-stateless-release
{{- end }}
{{- if isTrue .Env.MAKE_MASTER }}
  production_environment: &production_environment
    APP_HOSTNAME: {{ .Env.PRODUCTION_HOSTNAME }}
    CLOUDSQL_INSTANCE: {{ .Env.GCP_PRODUCTION_CLOUDSQL }}
    GCLOUD_CLUSTER: {{ .Env.GCP_PRODUCTION_CLUSTER }}
    GOOGLE_PROJECT_ID: {{ .Env.GCP_PRODUCTION_PROJECT }}
    {{- if .Env.APP_HOSTPATH }}
    HELM_NAMESPACE: {{ .Env.APP_HOSTPATH }}
    {{- else }}
    HELM_NAMESPACE: {{ replace .Env.CONTAINER_PREFIX "planet4-" "" 1 }}
    {{- end }}
    HELM_RELEASE: {{ .Env.CONTAINER_PREFIX }}-master
    MIN_REPLICA_COUNT: 2
    NEWRELIC_APPNAME: {{ .Env.NEWRELIC_APPNAME }} Production
    WP_DB_NAME: {{ .Env.MYSQL_USERNAME }}_{{ .Env.MYSQL_DATABASE }}_master
    WP_STATELESS_BUCKET: {{ .Env.CONTAINER_PREFIX }}-stateless
{{- end }}

job_definitions:
  build_steps: &build_steps
    working_directory: ~/
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
            - {{"composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}"}}
            - {{"composer-v5-{{ .Branch }}-{{ .Revision }}"}}
            - {{"composer-v5-{{ .Branch }}"}}
            - composer-v5
      - run: activate-gcloud-account.sh
      - run: mkdir -p /tmp/workspace/var
      - run: mkdir -p /tmp/workspace/src
      - run: echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run: make
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Build" notify-job-failure.sh
      - save_cache:
          key: {{"composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}"}}
          paths:
            - source/cache
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

{{- if isTrue .Env.MAKE_RELEASE }}
  prepare_release: &prepare_release
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: release-prepare-nro.sh
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Prepare" notify-job-failure.sh
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  notify_promote: &notify_promote
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: notify
          command: |
            TYPE="@rawalker Promote release/$(increment-version.sh "$(git-current-tag.sh)")" \
            EXTRA_TEXT="Verify: https://$APP_HOSTNAME/$APP_HOSTPATH" \
            notify-job-hold.sh

  notify_hold: &notify_hold
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: notify
          command: |
            TYPE="@rawalker Hold: ${CIRCLE_TAG}" \
            EXTRA_TEXT="Verify: https://$APP_HOSTNAME/$APP_HOSTPATH" \
            notify-job-hold.sh

  finish_release: &finish_release
    steps:
      - checkout
      - run: release-finish.sh
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Promote" notify-job-failure.sh
{{- end }}

  deploy_steps: &deploy_steps
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: activate-gcloud-account.sh
      - run: BUILD_TAG=build-$(cat /tmp/workspace/var/circle-build-num) make -j2 deploy

jobs:
  build-branch:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *build_steps

{{- if isTrue .Env.MAKE_RELEASE }}
  prepare-release:
    <<: *defaults
    <<: *prepare_release

  notify-promote:
    <<: *defaults
    <<: *notify_promote
    environment:
      <<: *common_environment
      <<: *release_environment

  build-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *build_steps

  finish-release:
    <<: *defaults
    <<: *finish_release
{{- end }}

{{- if isTrue .Env.MAKE_MASTER }}
  build-tag:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *build_steps

  notify-hold:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *notify_hold
{{- end }}

  deploy-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *deploy_steps

{{- if isTrue .Env.MAKE_RELEASE }}
  deploy-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *deploy_steps
{{- end }}

{{- if isTrue .Env.MAKE_MASTER }}
  deploy-tag:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *deploy_steps

  create-sync-sql:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_create_sync_file.sh


  sync-sql-to-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_to_sync_site.sh release

  sync-sql-to-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_to_sync_site.sh develop
{{- end }}


workflow_definitions:
  develop_common: &develop_common
    context: org-global
    filters:
      branches:
        only: develop
{{- if isTrue .Env.MAKE_RELEASE }}
  release_common: &release_common
    context: org-global
    filters:
      branches:
        only: /^release.*/
{{- end }}
{{- if isTrue .Env.MAKE_MASTER }}
  tag_common: &tag_common
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v\p{Digit}+\.\p{Digit}+\.\p{Digit}+.*/
  sync_common: &sync_common
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /sync.*/
{{- end }}

workflows:
  version: 2
  develop:
    jobs:
      - build-branch:
          <<: *develop_common
      - deploy-develop:
          <<: *develop_common
          requires:
            - build-branch
{{- if isTrue .Env.MAKE_RELEASE }}
      - prepare-release:
          <<: *develop_common
          requires:
            - deploy-develop

  release:
    jobs:
      - build-release:
          <<: *release_common
      - deploy-release:
          <<: *release_common
          requires:
            - build-release
      - notify-promote:
          <<: *release_common
          requires:
            - deploy-release
      - hold-promote:
          <<: *release_common
          type: approval
          requires:
            - deploy-release
      - finish-release:
          <<: *release_common
          requires:
            - hold-promote
            - notify-promote
{{- end }}

{{- if isTrue .Env.MAKE_MASTER }}
  tag:
    jobs:
      - build-tag:
          <<: *tag_common
      - hold-tag:
          <<: *tag_common
          type: approval
          requires:
            - build-tag
      - notify-hold:
          <<: *tag_common
          requires:
            - build-tag
      - deploy-tag:
          <<: *tag_common
          requires:
            - hold-tag

  create-sync-sql:
    jobs:
      - create-sync-sql:
          <<: *sync_common
      - sync-sql-to-release:
          <<: *sync_common
          requires:
            - create-sync-sql
      - sync-sql-to-develop:
          <<: *sync_common
          requires:
            - sync-sql-to-release
{{- end }}
