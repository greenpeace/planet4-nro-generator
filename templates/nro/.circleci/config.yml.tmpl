{{- if not .Env.IS_CONFIG_UPDATE }}
---
version: 2.1

defaults: &defaults
  docker:
    - image: greenpeaceinternational/p4-builder:{{ .Env.BUILDER_VERSION }}

job_environments:
  common_environment: &common_environment
    APP_HOSTPATH: {{ .Env.APP_HOSTPATH }}
    CONTAINER_PREFIX: {{ .Env.CONTAINER_PREFIX }}
    WP_DB_NAME_PREFIX: {{ .Env.MYSQL_USERNAME }}_{{ .Env.MYSQL_DATABASE }}
  develop_environment: &develop_environment
    APP_ENVIRONMENT: development
    APP_HOSTNAME: {{ .Env.DEVELOPMENT_HOSTNAME }}
    CLOUDSQL_INSTANCE: {{ .Env.GCP_DEVELOPMENT_CLOUDSQL }}
    GOOGLE_PROJECT_ID: {{ .Env.GCP_DEVELOPMENT_PROJECT }}
    GCLOUD_CLUSTER: p4-development
    HELM_NAMESPACE: develop
    HELM_RELEASE: {{ .Env.CONTAINER_PREFIX }}
    NEWRELIC_APPNAME: {{ .Env.NEWRELIC_APPNAME }} Development
    WP_DB_NAME: {{ .Env.MYSQL_USERNAME }}_{{ .Env.MYSQL_DATABASE }}_develop
    WP_STATELESS_BUCKET: {{ .Env.CONTAINER_PREFIX }}-stateless-develop
{{- if isTrue .Env.MAKE_RELEASE }}
  release_environment: &release_environment
    APP_ENVIRONMENT: staging
    APP_HOSTNAME: {{ .Env.RELEASE_HOSTNAME }}
    CLOUDSQL_INSTANCE: {{ .Env.GCP_PRODUCTION_CLOUDSQL }}
    GCLOUD_CLUSTER: {{ .Env.GCP_PRODUCTION_CLUSTER }}
    GOOGLE_PROJECT_ID: {{ .Env.GCP_PRODUCTION_PROJECT }}
    {{- if .Env.APP_HOSTPATH }}
    HELM_NAMESPACE: {{ .Env.APP_HOSTPATH }}
    {{- else }}
    HELM_NAMESPACE: {{ replace .Env.CONTAINER_PREFIX "planet4-" "" 1 }}
    {{- end }}
    HELM_RELEASE: {{ .Env.CONTAINER_PREFIX }}-release
    NEWRELIC_APPNAME: {{ .Env.NEWRELIC_APPNAME }} Release
    WP_DB_NAME: {{ .Env.MYSQL_USERNAME }}_{{ .Env.MYSQL_DATABASE }}_release
    WP_STATELESS_BUCKET: {{ .Env.CONTAINER_PREFIX }}-stateless-release
{{- end }}
{{- if isTrue .Env.MAKE_MASTER }}
  production_environment: &production_environment
    APP_HOSTNAME: {{ .Env.PRODUCTION_HOSTNAME }}
    CLOUDSQL_INSTANCE: {{ .Env.GCP_PRODUCTION_CLOUDSQL }}
    GCLOUD_CLUSTER: {{ .Env.GCP_PRODUCTION_CLUSTER }}
    GOOGLE_PROJECT_ID: {{ .Env.GCP_PRODUCTION_PROJECT }}
    {{- if .Env.APP_HOSTPATH }}
    HELM_NAMESPACE: {{ .Env.APP_HOSTPATH }}
    {{- else }}
    HELM_NAMESPACE: {{ replace .Env.CONTAINER_PREFIX "planet4-" "" 1 }}
    {{- end }}
    HELM_RELEASE: {{ .Env.CONTAINER_PREFIX }}-master
    MIN_REPLICA_COUNT: 2
    NEWRELIC_APPNAME: {{ .Env.NEWRELIC_APPNAME }} Production
    WP_DB_NAME: {{ .Env.MYSQL_USERNAME }}_{{ .Env.MYSQL_DATABASE }}_master
    WP_STATELESS_BUCKET: {{ .Env.CONTAINER_PREFIX }}-stateless
{{- end }}
{{- end }}{{/* END if not .Env.IS_CONFIG_UPDATE */}}
job_definitions:
  visualtests_reference_steps: &visualtests_reference_steps
    docker:
      - image: greenpeaceinternational/planet4-backstop:latest
    working_directory: /src
    steps:
      - run: ./checkout.sh
      - run: ./mergescenarios.sh
      - run: mkdir /app/ -p
      - run: ./makehistory.sh
      - store_artifacts:
          path: /app/backstop_data
      - persist_to_workspace:
          root: /app
          paths:
            - backstop_data

  visualtests_compare_steps: &visualtests_compare_steps
    docker:
      - image: greenpeaceinternational/planet4-backstop:latest
    working_directory: /src
    parameters:
      notify:
        type: boolean
        default: false
    steps:
      - run: ./checkout.sh
      - run: ./mergescenarios.sh
      - run: mkdir /app/ -p
      - attach_workspace:
          at: /app
      - run: ./makecomparison.sh
      - store_artifacts:
          path: /app/backstop_data
      - when:
          condition: << parameters.notify >>
          steps:
            # Notify p4-activity-ci
            - slack/status:
                fail_only: true
                channel: C015MQGG3KQ
                webhook: ${SLACK_NRO_WEBHOOK}

  build_steps: &build_steps
    working_directory: ~/
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
            - {{"composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}"}}
            - {{"composer-v5-{{ .Branch }}-{{ .Revision }}"}}
            - {{"composer-v5-{{ .Branch }}"}}
            - composer-v5
      - run: |
          if [[ -d source/cache ]]; then ls -al source/cache; fi
      - run: activate-gcloud-account.sh
      - run: mkdir -p /tmp/workspace/var
      - run: mkdir -p /tmp/workspace/src
      - run: echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run: make
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Build" notify-job-failure.sh
      - save_cache:
          key: {{"composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}"}}
          paths:
            - source/cache
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  test_steps: &test_steps
    working_directory: ~/project
    docker:
      - image: gcr.io/planet-4-151612/p4-codeception:build-12
      - name: selenium
        image: selenium/standalone-chrome-debug:3.141.59-oxygen
    steps:
      - checkout
      - run: if [ ! -d "tests" ] || [ ! "$(ls -A tests)" ]; then circleci-agent step halt; fi
      - run: dockerize -wait tcp://selenium:4444
      - run: codeceptionify.sh .
      - run: codecept run --xml=junit.xml --html
      - run:
          name: Copy test artifacts
          when: always
          command: |
            mkdir -p /tmp/artifacts
            cp -r codeception/_output/. /tmp/artifacts
      - store_test_results:
          path: /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts

  deploy_steps: &deploy_steps
    working_directory: ~/
    parameters:
      notify:
        type: boolean
        default: false
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: activate-gcloud-account.sh
      - run: BUILD_TAG=build-$(cat /tmp/workspace/var/circle-build-num) make deploy
      - when:
          condition: << parameters.notify >>
          steps:
            # Notify p4-activity-ci
            - slack/status:
                channel: C015MQGG3KQ
                webhook: ${SLACK_NRO_WEBHOOK}

{{- if isTrue .Env.MAKE_RELEASE }}
  rollback_steps: &rollback_steps
    working_directory: ~/
    steps:
     - attach_workspace:
         at: /tmp/workspace
     - run: activate-gcloud-account.sh
     - run: make rollback
{{- end }}

jobs:
  visualtests-reference-develop:
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *visualtests_reference_steps

  visualtests-compare-develop:
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *visualtests_compare_steps

  build-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *build_steps

  test-develop:
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *test_steps

  deploy-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *deploy_steps

{{- if isTrue .Env.MAKE_RELEASE }}

  visualtests-reference:
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *visualtests_reference_steps

  visualtests-compare:
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *visualtests_compare_steps

  build-staging:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *build_steps

  test-staging:
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *test_steps

  deploy-staging:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *deploy_steps

  merge-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - run: merge-develop.sh

  rollback-staging:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *rollback_steps
{{- end }}

{{- if isTrue .Env.MAKE_MASTER }}
  promote:
    <<: *defaults
    environment:
      <<: *common_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - run:
          name: Approve promotion
          command: promote-to-production.sh "${CIRCLE_WORKFLOW_ID}"

  trigger-production:
    <<: *defaults
    environment:
      <<: *common_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - run:
          name: Trigger production
          command: trigger-production.sh "${CIRCLE_PROJECT_REPONAME}" "${CIRCLE_TAG}"

  build-production:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *build_steps

  deploy-production:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *deploy_steps

  create-sync-sql:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_create_sync_file.sh

  sync-to-staging:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_to_sync_site.sh release

  sync-to-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_to_sync_site.sh develop

  notify-sync:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - run: activate-gcloud-account.sh
      - run: /home/circleci/notify-sync-admins.sh

  backup:
    docker:
      - image: greenpeaceinternational/planet4-backup:latest
    environment:
      <<: *common_environment
      <<: *production_environment
    working_directory: /app
    steps:
      - run: echo "backup is running"
      - run: pwd
      - run: ls
      - run: ./go.sh
{{- end }}

{{- if isTrue .Env.MAKE_RELEASE }}
{{- else }}
  data-sync:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: /home/circleci/sync_to_test_site.sh
{{- end }}

workflow_definitions:
  develop_common: &develop_common
    context: org-global
    filters:
      branches:
        only: develop
{{- if isTrue .Env.MAKE_RELEASE }}
  staging_common: &staging_common
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v.*/
{{- end }}
{{- if isTrue .Env.MAKE_MASTER }}
  production_common: &production_common
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v.*/
{{- end }}

workflows:
  develop:
    jobs:
      - visualtests-reference-develop:
          <<: *develop_common
      - build-develop:
          <<: *develop_common
      - deploy-develop:
          <<: *develop_common
          requires:
            - build-develop
            - visualtests-reference-develop
{{- if isTrue .Env.MAKE_RELEASE }}
            - merge-develop
{{- end }}
      - test-develop:
          <<: *develop_common
          requires:
            - deploy-develop
      - visualtests-compare-develop:
          <<: *develop_common
          requires:
            - deploy-develop
{{- if isTrue .Env.MAKE_RELEASE }}
      - merge-develop:
          <<: *develop_common
{{- else }}
      - data-sync:
          <<: *develop_common
          requires:
            - deploy-develop
{{- end }}

{{- if isTrue .Env.MAKE_RELEASE }}
  staging:
    unless:
      not:
        equal: [ "staging", << pipeline.parameters.release_stage >> ]
    jobs:
      - visualtests-reference:
          <<: *staging_common
      - build-staging:
          <<: *staging_common
      - deploy-staging:
          <<: *staging_common
          requires:
            - build-staging
            - visualtests-reference
      - test-staging:
          <<: *staging_common
          requires:
            - deploy-staging
      - visualtests-compare:
          <<: *staging_common
          notify: true
          requires:
            - deploy-staging

{{- if isTrue .Env.MAKE_MASTER }}
      - hold-production:
          <<: *staging_common
          type: approval
          requires:
            - test-staging
      - promote:
          <<: *staging_common
          requires:
            - test-staging
            - visualtests-compare
      - trigger-production:
          <<: *staging_common
          requires:
            - hold-production
{{- end }}
{{- end }}

{{- if isTrue .Env.MAKE_RELEASE }}
  rollback-staging:
    when:
      equal: [ "rollback", << pipeline.parameters.release_stage >> ]
    jobs:
      - hold-rollback:
          <<: *staging_common
          type: approval
      - rollback-staging:
          <<: *staging_common
          requires:
            - hold-rollback
{{- end }}

{{- if isTrue .Env.MAKE_MASTER }}
  production:
    when:
      equal: [ "production", << pipeline.parameters.release_stage >> ]
    jobs:
      - build-production:
          <<: *production_common
      - deploy-production:
          <<: *production_common
          notify: true
          requires:
            - build-production

  sync-from-production:
    triggers:
      - schedule:
          cron: "10 01 1 * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - create-sync-sql:
          context: org-global
      - sync-to-staging:
          context: org-global
          requires:
            - create-sync-sql
      - sync-to-develop:
          context: org-global
          requires:
            - create-sync-sql

  notify-sync:
    triggers:
      - schedule:
          cron: "10 02 28 * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - notify-sync:
          context: org-global

  backup:
    triggers:
      - schedule:
          cron: "30 02 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - backup:
          context: org-global
{{- end }}
